Java inner class or nested class is a class that is declared inside the class or interface.

We use inner classes to logically group classes and interfaces in one place to be more readable and maintainable.

Additionally, it can access all the members of the outer class, including private data members and methods.

There are three advantages of inner classes in Java. They are as follows:

    Nested classes represent a particular type of relationship that is it can access all the members (data members and methods) of the outer class, including private.
    Nested classes are used to develop more readable and maintainable code because it logically group classes and interfaces in one place only.
    Code Optimization: It requires less code to write.
    
Difference between nested class and inner class in Java

    An inner class is a part of a nested class. Non-static nested classes are known as inner classes.


Type                    Description

Member Inner Class	    A class created within class and outside method.
Anonymous Inner Class	  A class created for implementing an interface or extending class. The java compiler decides its name.
Local Inner Class	      A class was created within the method.
Static Nested Class	    A static class was created within the class.
Nested Interface	      An interface created within class or interface.
